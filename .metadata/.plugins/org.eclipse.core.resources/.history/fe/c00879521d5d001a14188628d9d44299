package com.example.demo.controller;

import java.util.List;
import java.util.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.model.NTDateTimeRoleVO;
import com.example.demo.services.NTDateTimeServiceImpl;

@RestController
public class CounsellingAPIController {
	
	@Autowired
    public NTDateTimeServiceImpl counselingAPI;

    @RequestMapping("/createAppointment")
    public  String createAppointment(@RequestParam(value="firstName") String firstName, @RequestParam(value="lastName") String lastName, @RequestParam(value="role") String role,
    	@RequestParam(value="time") String time) throws ParseException{
    	
    	SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy");
    	Date date = (Date) sdf.parse(time);
        NTDateTimeRoleVO dateTimeRoleVO = new NTDateTimeRoleVO(firstName, lastName, role, date);
        NTDateTimeRoleVO dateTimeRoleVO1 = counselingAPI.insertCounseling(dateTimeRoleVO);
        return dateTimeRoleVO1.toString();
    }

    @RequestMapping("/getAppointments")
    public List<NTDateTimeRoleVO> getAppointments(@RequestParam(value="firstname") String firstname, @RequestParam(value="lastname") String lastname){
        return counselingAPI.getCounseling(firstname, lastname);
    }

    @RequestMapping("/getAllData")
    public List<NTDateTimeRoleVO> getAllData(){
        return counselingAPI.getAllDateTimeRoles();
    }

    @RequestMapping("/updateAppointment")
    public void updateAppointment(@RequestParam(value="firstname") String firstname, @RequestParam(value="lastname") String lastname, @RequestParam(value="role") String role, 
    		@RequestParam(value="time") String time) throws ParseException{
    	SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy");
    	Date date = (Date) sdf.parse(time);
        NTDateTimeRoleVO dateTimeRoleVO = new NTDateTimeRoleVO(firstname,lastname, role, date);
        counselingAPI.updateCounseling(dateTimeRoleVO);
    }

    @RequestMapping("/deleteAllData")
    public void deleteAllData(){
        counselingAPI.deleteAllCounseling();
    }

    @RequestMapping("/deleteSelectedAppointment")
    public void deleteSelectedAppointment(@RequestParam(value="firstname") String firstname, @RequestParam(value="lastname") String lastname, @RequestParam(value="role") String role,
    		@RequestParam(value="time") String time) throws ParseException{
    	SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy");
    	Date date = (Date) sdf.parse(time);
        NTDateTimeRoleVO dateTimeRoleVO = new NTDateTimeRoleVO(firstname, lastname , role, date);
        counselingAPI.deleteCounseling(dateTimeRoleVO);
    }

}
